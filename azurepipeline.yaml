pool:
  name: Azure Pipelines
steps:
- bash: |
   if [ -f extensions.csproj ]
   then
       dotnet build extensions.csproj --output ./bin
   fi
  displayName: 'Build extensions'

- task: NodeTool@0
  displayName: 'Use Node version 10.14.1'
  inputs:
    versionSpec: 10.14.1

- task: Npm@1
  displayName: 'Install Application Dependencies'
  inputs:
    workingDir: '$(System.DefaultWorkingDirectory)'
    verbose: false

- task: Npm@1
  displayName: 'Run ''build'' script'
  inputs:
    command: custom
    workingDir: '$(System.DefaultWorkingDirectory)'
    verbose: false
    customCommand: 'run build --if-present'

- task: Npm@1
  displayName: 'Remove extraneous packages'
  inputs:
    command: custom
    workingDir: '$(System.DefaultWorkingDirectory)'
    verbose: false
    customCommand: 'prune --production'

- task: ArchiveFiles@2
  displayName: 'Archive files'
  inputs:
    rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
    includeRootFolder: false

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'

  - task: AzureCLI@2
    displayName: "Create Network Access "
    inputs:
      azureSubscription: Pay-As-You-Go (0c4bb8f8-40ca-43b1-b3a9-a059d5fc794f)
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |
        Current_IP=$(curl ipinfo.io/ip)
        echo $Current_IP
        sleep 1m
        az functionapp config access-restriction add -g DefaultResourceGroup-EUS -n fccdssnovelis --rule-name devloper --action Allow --ip-address $Current_IP --priority 200
        sleep 1m
      addSpnToEnvironment: true
      useGlobalConfig: true	 

- task: AzureFunctionApp@1
  inputs:
    azureSubscription: Pay-As-You-Go (0c4bb8f8-40ca-43b1-b3a9-a059d5fc794f)
    appType: 'functionApp'
    appName: fccdssnovelis
    package: '$(Build.ArtifactStagingDirectory)/**/*.zip'
    deploymentMethod: 'auto'
